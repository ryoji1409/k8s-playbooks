---
- name: Create kubeadm token
  delegate_to: "{{ groups['kube_control_plane'][0] }}"
  when: inventory_hostname == ansible_play_hosts_all[0]
  run_once: true
  block:
    - name: Create token
      ansible.builtin.shell: |
        kubeadm token create
      changed_when: false
      register: kubeadm_token
    - name: Run upload-certs command
      ansible.builtin.shell: |
        kubeadm init phase upload-certs --upload-certs
      changed_when: false
      register: upload_certs_result
    - name: Debug certificate-key
      ansible.builtin.debug:
        msg:
          - "{{ upload_certs_result.stdout_lines }}"
    - name: Extract certificate-key from output
      ansible.builtin.set_fact:
        certificate_key: >-
          {{ upload_certs_result.stdout_lines[2]
             | regex_search('[a-f0-9]{64}')
             | default('') }}
    - name: Create discovery-token-ca-cert-hash
      ansible.builtin.shell: |
        openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | \
        openssl dgst -sha256 -hex | sed 's/^.* //'
      changed_when: false
      register: discovery_token_ca_cert_hash
    - name: Confirm token
      ansible.builtin.debug:
        msg:
          - kubeadm_token："{{ hostvars[ansible_play_hosts_all[0]].kubeadm_token.stdout }}"
          - discovery_hash："{{ hostvars[ansible_play_hosts_all[0]].certificate_key }}"
          - discovery_token_ca_cert_hash："{{ hostvars[ansible_play_hosts_all[0]].discovery_token_ca_cert_hash.stdout }}"
      changed_when: false

- name: Join to k8s cluster control plane node
  when: "'kube_control_plane' in group_names"
  block:
    - name: Kubeadm join
      ansible.builtin.shell: |
        kubeadm join {{ kube_api_endpoint }}:{{ kube_api_endpoint_port }} --token {{ hostvars[ansible_play_hosts_all[0]].kubeadm_token.stdout }} \
        --discovery-token-ca-cert-hash sha256:{{ hostvars[ansible_play_hosts_all[0]].discovery_token_ca_cert_hash.stdout }} \
        --control-plane --certificate-key {{ hostvars[ansible_play_hosts_all[0]].certificate_key }} \
        --apiserver-advertise-address="{{ kube_control_plane[inventory_hostname].private_ip }}"
      changed_when: false
    - name: Setup kube config
      ansible.builtin.shell: |
        mkdir -p $HOME/.kube &&
        sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config &&
        sudo chown $(id -u):$(id -g) $HOME/.kube/config
      changed_when: false
    - name: Ensure kubectl bash completion is enabled in .bashrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        regexp: 'source <\(kubectl completion bash\)'
        line: 'source <(kubectl completion bash)'
        state: present
        insertafter: EOF

- name: Join to k8s cluster
  ansible.builtin.shell: |
    kubeadm join {{ kube_api_endpoint }}:{{ kube_api_endpoint_port }} --token {{ hostvars[ansible_play_hosts_all[0]].kubeadm_token.stdout }} \
    	--discovery-token-ca-cert-hash sha256:{{ hostvars[ansible_play_hosts_all[0]].discovery_token_ca_cert_hash.stdout }}
  when: "'kube_node' in group_names"
  changed_when: false
